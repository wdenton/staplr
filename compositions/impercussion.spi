# STAPLR percussion sounds

composition = "Impercussion 0.5"

# COMMENT:
# Branch: ignored (but in future, maybe: except Bronfman is delayed a half-beat)
# Type: sample or drum sound used, with some randomization
# Duration: duration of sound

# Copyright William Denton <wtd@pobox.com> 2018

require 'json'

use_debug false
use_random_seed Time.now.to_i

use_synth :chipbass  #:dsaw, :growl

file = ENV['HOME'] + "/src/staplr/test-durations/not-a-lot.json"

# How often the data file refreshes, and so how often
# the main loop loops.
minutes = 10

# 128 BPM is a nice tempo and also a convenient power of 2.
bpm = 128
use_bpm bpm

define :play_in_a_thread do |&block|
  in_thread do
    block.call
  end
end

define :all_the do |activity, i|
  # For 1..5, return an array of all of the times of those question types,
  # regardless of branch.
  activity.map { |h, k| k["#{i}"] }.flatten.compact
end

define :the_ones do |minutes|
  minutes.times do
    note_length = [1, 2, 2, 3, 4, 4].choose
    with_fx :panslicer do
      bpm.times do
        note_length.times do
          sample :drum_cymbal_closed, amp: [0.5, 0.7, 0.9].choose, wave: 3, phase: 2.0/note_length
          sleep 1.0/note_length
        end
      end
    end
  end
end

define :the_twos do |minutes|
  # Snares on the 2 and 4
  minutes.times do
    (bpm/2).times do
      sleep 1
      sample :drum_snare_soft, amp: [0.7, 0.9].choose, pan: -0.25
      sleep 1
    end
  end
end

define :the_threes do |minutes|
  # Toms on random beats, with random tempo
  toms = [:drum_tom_mid_soft, :drum_tom_mid_hard,
          :drum_tom_lo_soft, :drum_tom_lo_hard,
          :drum_tom_hi_hard, :drum_tom_hi_soft
          ]
  with_fx :reverb, room: 0.3 do
    minutes.times do
      note_length = [1, 2, 4].choose
      bpm.times do
        note_length.times do
          sample toms.choose, amp: [0.3, 0.5, 0.7].choose, pan: rrand(-1, 1) if rand_i() == 1
          sleep 1.0/note_length
        end
      end
    end
  end
end

define :the_fours do |minutes|
  # Synth bass sound.   (Future: make it random synthy sound.)
  random_four_synth = [:bass_hard_c, :bass_woodsy_c, :bass_voxy_c].choose
  with_fx :reverb do
    minutes.times do
      bpm/4.times do
        sample random_four_synth, pan: 0.5, amp: 0.5
        sleep 4
      end
    end
  end
end

define :the_fives do |minutes|
  # Four to the floor bass frum
  with_fx :bitcrusher do
    minutes.times do
      bpm.times do
        sample :bd_tek
        sleep 1
      end
    end
  end
end


loop do
  
  activity = JSON.parse(File.read(file))
  
  log_raw "#{composition}: #{activity}\n"
  
  all_the(activity, 1).each do |one|
    play_in_a_thread do the_ones(one) end
  end
  
  all_the(activity, 2).each do |two|
    play_in_a_thread do the_twos(two) end
  end
  
  all_the(activity, 3).each do |three|
    play_in_a_thread do the_threes(three) end
  end
  
  all_the(activity, 4).each do |four|
    play_in_a_thread do the_fours(four) end
  end
  
  all_the(activity, 5).each do |five|
    play_in_a_thread do the_fives(five) end
  end
  
  sleep minutes * bpm
  
end
