# Library Silences

# Library Silences

composition = "Library Silences 0.6"

require 'json'

use_debug false
use_random_seed Time.now.to_i

refresh_minutes = 1

# file = ENV['HOME'] + "/src/staplr/test-durations/test.json"
file = ENV['HOME'] + "/src/staplr/data/live/activity.json"

# silence_samples = "/media/wtd/ART_DATA/Libraries/STAPLR/Silences/samples"
silence_samples = "/var/Silences/samples"

bpm = 60
bpm = bpm.to_f
use_bpm bpm

define :all_the_minutes do |activity|
  # Return an array that is just a list of durations,
  # with no information about location or type.
  # E.g. [1, 3]
  all_the_minutes = []
  unless activity.nil?
    activity.each do |branch, types|
      unless types.nil?
        types.each do |type, minutes|
          all_the_minutes << minutes
        end
      end
    end
  end
  all_the_minutes.flatten!
end

define :play_in_a_thread do |&block|
  in_thread do
    block.call
  end
end

define :play_a_silence do |minutes|

  play_in_a_thread do
    minutes.times do
      sample silence_samples, "L01", rrand_i(0, 151), pan: rrand(-0.8, 0.8)
      # Every sample is 60 seconds long, and we're using 60 bpm, so sleep that long
      sleep bpm
    end
  end

  #  if minutes == 1 then
  #    sample silence_samples, "L01", rrand_i(0, 9)
  #  elsif minutes == 3 then
  #    sample silence_samples, "L03", rrand_i(0, 9)
  #  elsif minutes == 5 then
  #    sample silence_samples, "L05", rrand_i(0, 9)
  #  elsif minutes == 8 then
  #    sample silence_samples, "L08", rrand_i(0, 9)
  #  elsif minutes == 10 then
  #    sample silence_samples, "L10", rrand_i(0, 9)
  #  elsif minutes = 15 then
  #    3.times do
  #      play_a_silence(5)
  #      sleep 5 * bpm
  #    end
  #  elsif minutes == 25 then
  #    2.times do
  #      play_a_silence(10)
  #      sleep 10 * bpm
  #    end
  #    play_a_silence(5)
  #  elsif minutes == 40 then
  #    4.times do
  #      play_a_silence(10)
  #      sleep 10 * bpm
  #    end
  #  elsif minutes == 65
  #    6.times do
  #      play_a_silence(10)
  #      sleep 10 * bpm
  #    end
  #    play_a_silence(5)
  #  end

  # length_id = "L" + (minutes < 10 ? "0" : "") + minutes.to_s
  # sample silence_samples, length_id
end

loop do
  activity = JSON.parse(File.read(file))
  log_raw "#{composition}: #{activity}\n"
  unless activity.size == 0
    all_the_minutes(activity).each do |minutes|
      play_in_a_thread do
        play_a_silence(minutes)
      end
    end
  end
  sleep refresh_minutes * bpm
end
