# STAPLR in a Terry Riley style, sort of

composition = "Multirileyish 4.0"

# COMMENT:
# Branch: ignored
# Type: note length
# Duration: duration of sound

# Copyright William Denton <wtd@pobox.com> 2018

require 'json'

use_debug false
use_random_seed Time.now.to_i

# Good synths: :beep, :hoover, :chipbass, :dsaw, :growl
# Or just :piano
use_synth :piano

minutes = 1

# file = ENV['HOME'] + "/src/staplr/test-durations/test.json"
file = ENV['HOME'] + "/src/staplr/data/live/activity.json"

bpm = 32
bpm = bpm * 1.0
use_bpm bpm

define :play_in_a_thread do |&block|
  in_thread do
    block.call
  end
end

define :all_the do |activity, i|
  # For 1..5, return an array of all of the times of those question types,
  # regardless of branch.
  activity.map { |h, k| k["#{i}"] }.flatten.compact
end

define :the_sound do |type, minutes|
  c = chord([:c2, :c3, :c4, :c5].choose , :m11) #[:m7, :m9, :m11, :m13].choose
  note_length = 2**(type - 4)
  j = minutes.to_i * bpm / note_length
  log_raw "#{composition}: #{type}: Mins: #{minutes} Len: #{note_length} Rep: #{j} Chord #{c}\n"
  n  = rrand_i(0, c.length)
  pan_placement = rrand(-1, 1)
  with_fx :reverb, room: 0.7 do
    j.times do
      # For a synth, there are more effects that can be used:
      # play c.ring[n], attack: note_length/2, decay: note_length/2, pan: pan_placement, mod_phase: 0.25
      # But for a piano, just play it plain:
      delay = [0, 0, 0.01, 0.01, 0.02, 0.03].choose
      sleep delay
      play c.ring[n], amp: rrand(0.7, 0.95), pan: pan_placement unless one_in 8
      n += [-2, -1, -1, 0, 1, 1, 2].choose
      sleep note_length - delay
    end
  end
end

loop do

  activity = JSON.parse(File.read(file))

  log_raw "#{composition}: #{activity}\n"

  all_the(activity, 1).each do |one|
    play_in_a_thread do the_sound(1, one) end
  end

  all_the(activity, 2).each do |two|
    play_in_a_thread do the_sound(2, two) end
  end

  all_the(activity, 3).each do |three|
    play_in_a_thread do the_sound(3, three) end
  end

  all_the(activity, 4).each do |four|
    play_in_a_thread do the_sound(4, four) end
  end

  all_the(activity, 5).each do |five|
    play_in_a_thread do the_sound(5, five) end
  end

  sleep minutes * bpm

end
